
var utils = require('protean'),
    LinkedList = utils.LinkedList,
    Cursor = LinkedList.Cursor,
    PathCursor,
    Path;
//---------------------------------------------------------------------------
// PathCursor
//---------------------------------------------------------------------------
PathCursor = Cursor.extend({
    constructor: function PathCursor (list) {
        PathCursor.superclass.call(this, list);
    },
    
    get root () {
        return this.list.head.data;
    },
    
    get leaf () {
        return this.list.tail.data;
    },
    
    get node () {
        return this.item.data;
    },
    
    get parent () {
        return this.prev().value;
    },
    
    get length () {
        return this.list.length;
    },
    
    getAttribute: function (name) {
        var item = this.item;
        return item && item.data[name];
    },
    
    setAttribute: function (name, val) {
        var item = this.item;
        item.data[name] = val;
        return this;
    },
    
    updateAttributes: function (name, obj) {
        utils.extend(this.item.data, obj);
        return this;
    },
    
    getChildKeys: function () {
        return this.list.subject.getChildKeys(this.item.data);
    },
    
    getChildren: function (key) {
        return this.list.subject.getChildren(this.item.data, key);
    },
    
    getAllChildren: function () {
        return this.list.subject.getAllChildren(this.item.data);
    },
    
    destroy: function () {
        this.subject = null;
        Cursor.prototype.destroy.call(this);
    }
});
//---------------------------------------------------------------------------
// Path
//---------------------------------------------------------------------------
Path = LinkedList.extend({
    constructor: function Path (subject, init) {
        this.subject = subject;
        Path.superclass.apply(this, init || []);
    },
    
    getCursor: function () {
        return (new PathCursor(this)).ffwd();
    }
});
//---------------------------------------------------------------------------
// Exports
//---------------------------------------------------------------------------
Path.Cursor = PathCursor;
module.exports = Path;
